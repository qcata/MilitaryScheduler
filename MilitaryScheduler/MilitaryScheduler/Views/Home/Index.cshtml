@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<script src="~/js/daypilot/daypilot-all.min.js" asp-append-version="true"></script>
<link href="icons/style.css" rel="stylesheet" type="text/css">


@if (SignInManager.IsSignedIn(User))
{
    <br />
    <br />
    <br />
    <div class="main">
        <div style="float:left; width: 150px; display:none;">
            <div id="nav"></div>
        </div>
        <div>
            <div class="navi">
                <button id="previous">&laquo;</button>
                <button id="today">Today</button>
                <button id="next">&raquo;</button>
            </div>
            <div id="dp"></div>
        </div>
    </div>
}
else
{
    <p class="mega">
        Military Scheduler
    </p>
    <p class="mini">Please login in order to access the time scheduler.</p>
}

<script>
    var tempControl = new Object();
    var tempEventId = 0;

    var nav = new DayPilot.Navigator("nav");
    nav.showMonths = 3;
    nav.skipMonths = 3;
    nav.selectMode = "month";
    nav.onTimeRangeSelected = function (args) {
        dp.startDate = args.day;
        dp.update();
        dp.events.load("/api/events");
    };
    nav.init();


    var dp = new DayPilot.Month("dp");
    dp.onTimeRangeSelected = function (args) {
        tempControl = args;
        $.ajax({
            type: 'GET',
            url: '/api/events/getoverlapping?start=' + args.start.toString(),
            success: function (data) {
                if (data === undefined || data === null) {
                    createNewEvent();
                }
                else {
                    requestChangeEvent(data);
                }
            },
            contentType: "application/json",
            dataType: 'json'
        });


    };
    dp.eventMoveHandling = null;
    dp.eventResizeHandling = null;

    dp.onBeforeEventRender = function (args) {
        args.data.backColor = args.data.color;
        args.data.areas = [
            { top: 3, right: 3, bottom: 3, icon: "icon-triangle-down", visibility: "Hover", action: "ContextMenu", style: "font-size: 12px; background-color: rgba(255, 255, 255, .5); border: 1px solid #aaa; padding: 3px; cursor:pointer;" }
        ];
    };
    dp.contextMenu = new DayPilot.Menu({
        items: [
            {
                text: "Delete",
                onClick: function (args) {
                    var e = args.source;
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/events/' + e.id(),
                        success: function (data) {
                            if (data === "Forbidden") {
                                dp.message("You can not delete appointments that are not yours");
                            }
                            else {
                                dp.events.remove(e);
                                dp.message("Event deleted");
                            }
                        },
                        contentType: "application/json",
                        dataType: 'json'
                    });
                }
            }
        ]
    });

    dp.allowMultiSelect = false;
    dp.init();

    dp.events.load("/api/events");

    function createNewEvent() {
        DayPilot.Modal.confirm("Book this day for yourself?", { okText: "Yes", cancelText: "No" }).then(function (modal) {
            var dp = tempControl.control;
            dp.clearSelection();
            if (modal.result === undefined) {
                return;
            }
            var params = {
                start: tempControl.start.toString(),
                end: tempControl.end.toString(),
                resource: tempControl.resource
            };
            $.ajax({
                type: 'POST',
                url: '/api/events',
                data: JSON.stringify(params),
                success: function (data) {
                    dp.events.add(new DayPilot.Event(data));
                    dp.message("Reservation was succesful");
                },
                contentType: "application/json",
                dataType: 'json'
            });
        });
    }

    function requestChangeEvent(data) {
        data = data.slice(1, -1);
        var response = data.split(/[\s,]+/);
        tempEventId = response[0];
        if (response[2] === "False") {
            DayPilot.Modal.confirm("This event is booked for " + response[1] + ".\n Do you want to create a Change Request for this day?", { okText: "Yes", cancelText: "No" }).then(function (modal) {
                var dp = tempControl.control;
                dp.clearSelection();
                if (modal.result === undefined) {
                    return;
                }
                $.ajax({
                    type: 'GET',
                    url: '/api/events/createchangerequest?eventId=' + tempEventId,
                    success: function (data) {
                        debugger;
                        if (data === "Forbidden") {
                            dp.message("You can not create a change request for this event");
                        }
                        else {
                            dp.message("Change request sucesfully created");
                        }
                    },
                    contentType: "application/json",
                    dataType: 'json'
                });
            });
        }
    }

    document.addEventListener('DOMContentLoaded', function () {

        var aTags = document.getElementsByTagName("div");
        var searchText = "DEMO";
        var found;

        for (var i = 0; i < aTags.length; i++) {
            if (aTags[i].textContent == searchText) {
                found = aTags[i];
                break;
            }
        }

        found.hidden = true;

        $("#previous").click(function () {
            nav.select(nav.selectionDay.addMonths(-1));
        });

        $("#today").click(function () {
            nav.select(DayPilot.Date.today());
        });

        $("#next").click(function () {
            nav.select(nav.selectionDay.addMonths(1));
        });

    });

</script>